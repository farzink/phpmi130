<div class="container m-4 p-3">
    

    function:
        if(array_key_exists("items", $model)){
            $content = '<div class="row">';
            foreach($model['items'] as $item ){
                 $content.= "<div class='col-sm-4'><div class='card mt-2' style='width: 18rem;'>
                        <img class='card-img-top' style='object-fit: scale-down; width: auto; height: 215px; padding: 9px' src='http://localhost:9000/phpmi130/resource/get?id={$item->imageAddress}' alt='Card image cap'>
                        <div class='card-body'>
                          <h5 class='card-title'>{$item->title}</h5>
                          <p class='card-text'>Euro {$item->price}</p>
                          <p class='card-text'>Qty {$item->quantity}</p>
                          <p class='card-text'>{$item->description}</p>
                          <a href='#' data-itemId='{$item->id}' data-price='{$item->price}' class='btn btn-primary order-button'>Add to card</a>
                        </div>
                      </div></div>";
                      
                  
            }
            $content .= "</div>";
            return $content;
            //return json_encode($model['items']);
        }
        %

        <div id="popup" style="position: fixed; display: none;
         width: 100%; height: 100%; top: 0; left: 0; z-index: 1000; background-color: #94948b91">
            <div style="position: relative; width: 100%; height: 100%">
                <div style="position: absolute; width: 400px; 
                height: 200px; 
                left: 50%; transform: translate(-50%, -50%);
                top: 50%; 
                background-color: #122523;
                border-radius: 12px;
                padding: 12px;
                color: white">
                <div style="position: relative; width: 100%; height: 100%">
                <p id="itemWarning">
                </p>                    
                <button id="yesButton" class="button" style="position: absolute; bottom: 2px; right: 12px; width: 120px; border: 0; color: white; border-radius: 3px; background-color: #298a29">Yes</button>
                <button id="noButton" class="button" style="position: absolute; bottom: 2px; left: 12px; width: 120px; border: 0; color: white; border-radius: 3px; background-color: #af2424">No</button>
            </div>
                </div>
                
            </div>
        </div>
        <!-- <input id="order" type="button" value="order" /> -->
        <script>
            const STORE = "store"
            const itemWarning = document.getElementById("itemWarning")
            const popup = document.getElementById("popup")
            updateByLocalStorage = (extra=null) => {
                const store = localStorage.getItem(STORE)
                if(store != null){
                    const items = JSON.parse(store)
                    if(extra)
                        extra(items.length)
                }
            }
            addItemToLocalStorage = (item) => {
                const store = localStorage.getItem("store")
                if(store != null){
                    const items = JSON.parse(store)
                    items.push(item)
                    localStorage.setItem(STORE, JSON.stringify(items))
                } else {
                    const items = []
                    items.push(item)
                    localStorage.setItem(STORE, JSON.stringify(items))
                }
            }
            removeLocalStorage = () => {
                localStorage.removeItem(STORE)
            }     
            getItemsInLocalStorage = () => {
                const store = localStorage.getItem("store")
                if(store != null){
                    return JSON.parse(store)
                }
                return null
            }       


            createRequest = (path, verb, data = null) => {                
                return new Promise((a,s) => {
                    var request = new XMLHttpRequest()                    
                    request.addEventListener("load", i => {
                        if(request.status === 200 ||request.status === 201){
                            if(request.response != null && request.response != "")
                                a(JSON.parse(request.response))
                            else {
                                a(null)
                            }
                        } else {
                            s(request)
                        }
                    })
                    request.open(verb, path, true)
                    //request.setRequestHeader("content-type", "application/json")
                    if(data){                        
                        //request.send(JSON.stringify(data))
                        request.send(data)
                    }
                    else
                        request.send()
                })
            }


            var shoppingCard = document.getElementById("shoppingCard");
            var path = "/phpmi130"
            updateShoppingCart = items => {
                if(shoppingCard){
                    shoppingCard.innerHTML = `Shopping Card (${items})`;
                    shoppingCard.title = `you have ${items} ${items == 1 ? 'item' : 'items'} in your card`;
                }
            }
            initOrderbuttons = () => {
                document.querySelectorAll(".order-button")
                    .forEach(button => {
                        button.addEventListener("click", e => {
                            e.preventDefault()
                            if(document.cookie != ""){
                            createRequest(`${path}/orders/additem?itemId=${button.dataset.itemid}&price=${button.dataset.price}`, "GET")
                                .then(itemData => {
                                    createRequest(`${path}/orders/card`, "GET")
                                        .then(data => {
                                           updateShoppingCart(data.length)
                                        })
                                        .catch(error => {                                            
                                            
                                        })
                                })
                                .catch(error => {
                                        if(error.status === 406){
                                            const errorContainer = document.getElementById("error_container")
                                            if(errorContainer){
                                                errorContainer.innerHTML = "order can`t exceed available quantity"
                                                errorContainer.style.display = "block"
                                                window.setTimeout(() => {
                                                    errorContainer.style.display = "none"
                                                }, 5000)
                                            }
                                            //updateShoppingCart(data.length)
                                        }
                                        else {
                                        addItemToLocalStorage({
                                            itemId: button.dataset.itemid,
                                            price: button.dataset.price
                                        })
                                        updateByLocalStorage(updateShoppingCart)
                                        }
                                })
                            } else {
                                addItemToLocalStorage({
                                            itemId: button.dataset.itemid,
                                            price: button.dataset.price
                                        })
                                        updateByLocalStorage(updateShoppingCart)
                            }

                        })
                    })
            }
            window.addEventListener("load", e => {
                updateShoppingCart(0)
                var order = document.getElementById("order")
                if(document.cookie != ""){
                createRequest(`${path}/orders/card`, "GET")
                    .then(data => {
                        const items = getItemsInLocalStorage()
                        if(items != null){
                            if(items.length > 0) {
                                const yesButton = document.getElementById("yesButton")
                                const noButton = document.getElementById("noButton")
                                const releaseHandlers = () => {
                                    yesButton.removeEventListener("click", yesButtonFunc)
                                    noButton.removeEventListener("click", noButtonFunc)
                                    console.log("released..")
                                }
                                const yesButtonFunc = () => {

                                    updates = []
                                    items.forEach(item => {
                                    const data = new FormData()
                                    data.append("itemId", 1)
                                    data.append("price", 20)
                                    updates.push(createRequest(`${path}/orders/create`, "POST", data)
                                        .then(data => {
                                            console.log("success")
                                        })
                                        .catch(error => {
                                            console.log(error)
                                        })
                                        )
                                    })
                                    Promise.all(updates)
                                    .then(data => {
                                        createRequest(`${path}/orders/card`, "GET")
                                        .then(data => {
                                            updateShoppingCart(data.length)
                                            removeLocalStorage()
                                            releaseHandlers()
                                            popup.style.display = "none"
                                        })
                                        
                                    })
                                    
                                }
                                const noButtonFunc = () => {
                                    releaseHandlers()
                                    popup.style.display = "none"
                                }
                                
                                yesButton.addEventListener("click", yesButtonFunc)
                                noButton.addEventListener("click", noButtonFunc)
                            itemWarning.innerHTML = `
                            It seems there are already ${items.length} items that have been added prior to your login, do you like to add them to your basket now?
                            `
                            popup.style.display = "block"
                            }
                        }
                        shoppingCard.innerHTML = `Shopping Card (${data.length})`;
                        shoppingCard.title = `you have ${data.length} ${data.length == 1 ? 'item' : 'items'} in your card`;
                    })
                    .catch(error => {
                        updateByLocalStorage(updateShoppingCart)        
                    })
                } else {
                    updateByLocalStorage(updateShoppingCart)        
                }
                
                initOrderbuttons()


                

            })
        </script>
   

</div>


<!-- model:[id]
model:[iderror] -->



<!-- <h4>
        Followings are implemented
    </h4> -->



    <!-- <br />
    <br />

    <h6>
        Contents:
    </h6>
    <div>
        <ul>
            <li>
                Home
            </li>
            <li>
                Register new account
            </li>
            <li>
                Login
            </li>
            <li>
                Account Page (after Login)
            </li>
            <li>
                Logout
            </li>
        </ul>
    </div> -->

     <!-- <h6>
        Functions:
    </h6>
    <div>
        <ul>
            <li>
                Confirm Email address
            </li>
            <li>
                Resend activation link
            </li>
            <li>
                Forgot Password ==> Reset Password
            </li>
            <li>
                Change Password
            </li>
            <li>
                Change Mail
            </li>
            <li>
                Delete Account
            </li>
        </ul>
    </div>
    <br />
    <br />
    <h6>
        Features:
    </h6>
    <div>
        <ul>
            <li>
                Limited number of login attempts (Captcha integration)
            </li>
            <li>
                Token system for changing Email address
            </li>
            <li>
                Token system for confirming Email address
            </li>
            <li>
                Token system for deleting account
            </li>
            <li>
                Secure Session with Cookies and database
            </li>
            <li>
                Timeout for Session
            </li>
            <li>
                Timeout for Tokens
            </li>
            <li>
                Secure Storage of passwords with hash and salt
            </li>
            <li>
                XSS protection
            </li>
            <li>
                CSRF protection
            </li>
        </ul>
        
    </div> -->

