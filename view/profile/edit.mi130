<div class="row justify-content-center">
    <div class="card m-5 p-2" style="width: 60rem;">
        <div class="card-body">
            <h4 class="card-title">Manage Profile</h4>
            <h6 class="card-subtitle mb-4 text-muted ">You can edit your profile</h6>




           

            <form method="post">
            <input type="hidden" name="csrf_token" value="model:[csrf]" />
            <div class="form-group row">
                <label for="inputEmail3" class="col-sm-3 col-form-label">First Name</label>
                <div class="col-sm-8">
                    <input class="form-control" name="firstname" placeholder="First Name" value="model:[firstname]">
                    <!-- <span class="text-danger" v-if="!$v.firstname.maxLength">first name can not be more than 40 characters</span> -->
                </div>
            </div>

            <div class="form-group row">
                <label for="inputEmail3" class="col-sm-3 col-form-label">Last Name</label>
                <div class="col-sm-8">
                    <input class="form-control" name="lastname" placeholder="Last Name" value="model:[lastname]">
                    <!-- <span class="text-danger" v-if="!$v.lastname.maxLength">last name can not be more than 40 characters</span> -->
                </div>
            </div>


             
             <div class="form-group row">
                <label for="inputEmail3" class="col-sm-3 col-form-label">Phone</label>
                <div class="col-sm-8">
                    <input class="form-control" name="phone" value="model:[phone]">
                </div>
            </div>



            <div class="form-group row">
                <label for="inputEmail3" class="col-sm-3 col-form-label">address</label>
                <div class="col-sm-8">
                    <input class="form-control" name="address" value="model:[address]">
                </div>
            </div>














            <div class="form-group row">
                <div class="col-sm-12 offset-md-3 col-md-4">
                    <button type="submit" class="btn btn-primary" style="width: 10rem">Update</button>
                </div>
                <div class="col-sm-12 offset-md-1 col-md-4">
                        <button id="historyBtn" type="submit" class="btn btn-warning" style="width: 10rem">Orders</button>
                </div>
            </div>


        </form>


        <div  class="row">
                <div class="col-12"
                style="min-height: 200px;
        background-color: #3e3b3b;
        border-radius: 12px;
        padding: 20px;
        color: whitesmoke;
        display: none" id="history_review"></div>
            </div>

        </div>
        
    </div>
</div>






<script>
const path = "/phpmi130"
const review  = document.getElementById("history_review")

const historyBtn = document.getElementById("historyBtn")
createRequest =createRequest = (path, verb, data = null) => {
        return new Promise((a, s) => {
            var request = new XMLHttpRequest()
            request.addEventListener("load", i => {
                if (request.status === 200 || request.status === 201) {
                    if (request.response && request.response != "")
                        a(JSON.parse(request.response))
                    else {
                        a(null)
                    }
                } else {
                    if (request.response && request.response != "") {
                        s(request, JSON.parse(request.response))
                    }
                    else {
                        s(request, null)
                    }
                }
            })
            request.open(verb, path, true)
            
            if (data) {
            
                request.send(data)
            }
            else
                request.send()
        })
    }

    init = () => {
        historyBtn.addEventListener("click", e => {
            e.preventDefault()
            createRequest(`${path}/orders/history`, "GET")
            .then(data => {
                if(data.length > 0){
                    review.innerHTML =  data
                    .map(r => {
                        return `<div style="border-bottom: 2px solid #aea531;
                        width: 340px;">
                        <p>Ordered on: ${r.creationDateTime}</p>
                        <p>total: ${r.items} </p>
                        <p>items: ${r.total}</p> 
                        </div>
                        `
                    })
                    .reduce((acc, i) => {
                        return acc + i
                    }, "")
                    review.style.display="block"
                }
                else {
                    const errorContainer = document.getElementById("error_container")
                if (errorContainer) {
                    errorContainer.innerHTML = "you have no order"
                    errorContainer.style.display = "block"
                    window.setTimeout(() => {
                        errorContainer.style.display = "none"
                    }, 5000)
                }
                }
            })
        })
    }
updateCard = () => {
        createRequest(`${path}/orders/card`, "GET")
            .then(data => {
                shoppingCard.innerHTML = `Shopping Card (${data.length})`;
                shoppingCard.title = `you have ${data.length} ${data.length == 1 ? 'item' : 'items'} in your card`;
            })
    }

window.addEventListener("load", e => {
    updateCard()
    init()
})


</script>